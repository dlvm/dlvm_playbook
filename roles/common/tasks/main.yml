---
# This playbook would install dlvm package

- include: DebianInstall.yml
  when: "ansible_os_family == 'Debian'"

- include: RedHatInstall.yml
  when: "ansible_os_family == 'RedHat'"

- name: Create dlvm group
  group:
    name: "{{dlvm_group}}"
    state: present

- name: Create dlvm user
  user:
    name: "{{dlvm_user}}"
    group: "{{dlvm_group}}"
    groups: wheel
    state: present

- name: Copy dlvm user sudo no password file
  template:
    src: 99-dlvm-user.j2
    dest: /etc/sudoers.d/99-dlvm-user

- name: Install virtualenv
  pip:
    name: virtualenv

- name: Create virtualenv
  pip:
    requirements: ""
    virtualenv: "{{dlvm_env_path}}"
    virtualenv_python: python2.7

- name: Install dlvm
  pip:
    name: "{{dlvm_package}}"
    virtualenv: "{{dlvm_env_path}}"
    state: latest

- name: Create dlvm conf directory
  file:
    path: "{{dlvm_conf_path}}"
    state: directory
    recurse: yes

- name: Create dlvm main conf file
  template:
    src: conf.yml.j2
    dest: "{{dlvm_conf_path}}/conf.yml"

- name: Create dlvm log conf file
  template:
    src: logger.yml.j2
    dest: "{{dlvm_conf_path}}/logger.yml"

- name: Create dlvm log directory
  file:
    path: "{{dlvm_log_path}}"
    state: directory
    owner: "{{dlvm_user}}"
    group: "{{dlvm_group}}"
    recurse: yes

- name: Create dlvm work directory
  file:
    path: "{{dlvm_conf.work_dir}}"
    state: directory
    owner: "{{dlvm_user}}"
    group: "{{dlvm_group}}"
    recurse: yes
